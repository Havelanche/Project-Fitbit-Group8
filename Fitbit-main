from data_processing import load_data, get_unique_users, calculate_sleep_duration
from visualization import plot_distance_distribution, plot_workout, plot_LRM, calories_burned_per_day, time_block_analysis, plot_heart_rate_intensity, calories_vs_heart_rate
from analysis import classify_user, linear_regression, active_minutes_vs_sleep, sedentary_vs_sleep
from database import connect_db, verify_total_steps, SQL_acquisition, show_table_columns, show_all_tables

def main():
    DATA_FILE = "daily_activity.csv"
    DB_NAME = "fitbit_database.db"

    # Load data
    df = load_data(DATA_FILE)
    # print("Columns in df:", df.columns.tolist())


    # follow-up parameter insert for function update
    unique_users = get_unique_users(df, 'TotalSteps')
    print(f"Number of unique users: {df['Id'].nunique()} \n")

    # Visualization
    plot_distance_distribution(df)
    plot_workout(df)

    # Linear regression model
    model = linear_regression(df)
    # print(model.summary())

    # Calories burned per day (example user)
    user_id_test = df['Id'].iloc[0]  
    calories_burned_per_day(df, user_id=user_id_test, start_date="2016-03-01", end_date="2016-03-30")

    # Regression plot for a user
    plot_LRM(df, user_id=user_id_test)

    # Classify users based on activity
    user_classes = classify_user(df)
    print(user_classes)

    # Database verification
    connection = connect_db(DB_NAME)

    
    if connection:
        show_all_tables(connection)
        show_table_columns(connection, 'heart_rate')
        show_table_columns(connection, 'hourly_calories')
        show_table_columns(connection, 'hourly_intensity')
        show_table_columns(connection, 'hourly_steps')
        show_table_columns(connection, 'minute_sleep')
        show_table_columns(connection, 'weight_log')
        # Verify Total Steps consistency between CSV and DB
        verify_total_steps(df, connection)

        calculate_sleep_duration(connection)
        active_minutes_vs_sleep(connection)
        sedentary_vs_sleep(connection)
        calories_vs_heart_rate(connection)
        time_block_analysis(connection)
        plot_heart_rate_intensity(connection, user_id='1503960366')
        # Close DB connection
        connection.close()

if __name__ == '__main__':
    main()
